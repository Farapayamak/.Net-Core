//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VoiceWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VoiceWebService.VoiceSoap")]
    public interface VoiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMSWithSpeechText", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendSMSWithSpeechTextAsync(string username, string password, string smsBody, string speechBody, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMSWithSpeechTextBySchduleDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendSMSWithSpeechTextBySchduleDateAsync(string username, string password, string smsBody, string speechBody, string from, string to, System.DateTime scheduleDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSendSMSWithSpeechTextStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<VoiceWebService.AutoSpeechTextList> GetSendSMSWithSpeechTextStatusAsync(string username, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendBulkSpeechText", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> SendBulkSpeechTextAsync(string username, string password, string title, string body, string receivers, string DateToSend, int repeatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendBulkVoiceSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> SendBulkVoiceSMSAsync(string username, string password, string title, int voiceFileId, string receivers, string DateToSend, int repeatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadVoiceFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UploadVoiceFileAsync(string username, string password, string title, string base64StringFile);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AutoSpeechTextList
    {
        
        private string speechBodyField;
        
        private string sMSBodyField;
        
        private string phoneNumberField;
        
        private string sMSSenderNumberField;
        
        private long sMSRecIDField;
        
        private int sMSDeliveryStatusField;
        
        private int voiceDeliveryStatusField;
        
        private int repeatVoiceField;
        
        private System.DateTime insertDateField;
        
        private byte reqStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SpeechBody
        {
            get
            {
                return this.speechBodyField;
            }
            set
            {
                this.speechBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SMSBody
        {
            get
            {
                return this.sMSBodyField;
            }
            set
            {
                this.sMSBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PhoneNumber
        {
            get
            {
                return this.phoneNumberField;
            }
            set
            {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string SMSSenderNumber
        {
            get
            {
                return this.sMSSenderNumberField;
            }
            set
            {
                this.sMSSenderNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long SMSRecID
        {
            get
            {
                return this.sMSRecIDField;
            }
            set
            {
                this.sMSRecIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int SMSDeliveryStatus
        {
            get
            {
                return this.sMSDeliveryStatusField;
            }
            set
            {
                this.sMSDeliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int VoiceDeliveryStatus
        {
            get
            {
                return this.voiceDeliveryStatusField;
            }
            set
            {
                this.voiceDeliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int RepeatVoice
        {
            get
            {
                return this.repeatVoiceField;
            }
            set
            {
                this.repeatVoiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime InsertDate
        {
            get
            {
                return this.insertDateField;
            }
            set
            {
                this.insertDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public byte ReqStatus
        {
            get
            {
                return this.reqStatusField;
            }
            set
            {
                this.reqStatusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface VoiceSoapChannel : VoiceWebService.VoiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class VoiceSoapClient : System.ServiceModel.ClientBase<VoiceWebService.VoiceSoap>, VoiceWebService.VoiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public VoiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(VoiceSoapClient.GetBindingForEndpoint(endpointConfiguration), VoiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VoiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(VoiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VoiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(VoiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VoiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> SendSMSWithSpeechTextAsync(string username, string password, string smsBody, string speechBody, string from, string to)
        {
            return base.Channel.SendSMSWithSpeechTextAsync(username, password, smsBody, speechBody, from, to);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSWithSpeechTextBySchduleDateAsync(string username, string password, string smsBody, string speechBody, string from, string to, System.DateTime scheduleDate)
        {
            return base.Channel.SendSMSWithSpeechTextBySchduleDateAsync(username, password, smsBody, speechBody, from, to, scheduleDate);
        }
        
        public System.Threading.Tasks.Task<VoiceWebService.AutoSpeechTextList> GetSendSMSWithSpeechTextStatusAsync(string username, string password, long recId)
        {
            return base.Channel.GetSendSMSWithSpeechTextStatusAsync(username, password, recId);
        }
        
        public System.Threading.Tasks.Task<int> SendBulkSpeechTextAsync(string username, string password, string title, string body, string receivers, string DateToSend, int repeatCount)
        {
            return base.Channel.SendBulkSpeechTextAsync(username, password, title, body, receivers, DateToSend, repeatCount);
        }
        
        public System.Threading.Tasks.Task<int> SendBulkVoiceSMSAsync(string username, string password, string title, int voiceFileId, string receivers, string DateToSend, int repeatCount)
        {
            return base.Channel.SendBulkVoiceSMSAsync(username, password, title, voiceFileId, receivers, DateToSend, repeatCount);
        }
        
        public System.Threading.Tasks.Task<int> UploadVoiceFileAsync(string username, string password, string title, string base64StringFile)
        {
            return base.Channel.UploadVoiceFileAsync(username, password, title, base64StringFile);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.VoiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.VoiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.VoiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://api.payamak-panel.com/post/Voice.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.VoiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://api.payamak-panel.com/post/Voice.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            VoiceSoap,
            
            VoiceSoap12,
        }
    }
}
